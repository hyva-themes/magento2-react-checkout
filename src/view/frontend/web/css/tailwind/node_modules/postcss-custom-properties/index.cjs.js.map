{"version":3,"file":"index.cjs.js","sources":["src/lib/is-ignored.js","src/lib/get-custom-properties-from-root.js","src/lib/get-custom-properties-from-imports.js","src/lib/transform-value-ast.js","src/lib/transform-properties.js","src/lib/write-custom-properties-to-exports.js","src/index.js"],"sourcesContent":["function isBlockIgnored(ruleOrDeclaration) {\n\tvar rule = ruleOrDeclaration.selector ?\n\t\truleOrDeclaration : ruleOrDeclaration.parent;\n\n\treturn /(!\\s*)?postcss-custom-properties:\\s*off\\b/i.test(rule.toString())\n}\n\nfunction isRuleIgnored(rule) {\n\tvar previous = rule.prev();\n\n\treturn Boolean(isBlockIgnored(rule) ||\n\t\tprevious &&\n\t\tprevious.type === 'comment' &&\n\t\t/(!\\s*)?postcss-custom-properties:\\s*ignore\\s+next\\b/i.test(previous.text));\n}\n\nexport {\n\tisBlockIgnored,\n\tisRuleIgnored\n}\n","import { parse } from 'postcss-values-parser';\nimport { isBlockIgnored } from './is-ignored';\n\n// return custom selectors from the css root, conditionally removing them\nexport default function getCustomPropertiesFromRoot(root, opts) {\n\t// initialize custom selectors\n\tconst customPropertiesFromHtmlElement = {};\n\tconst customPropertiesFromRootPseudo = {};\n\n\t// for each html or :root rule\n\troot.nodes.slice().forEach(rule => {\n\t\tconst customPropertiesObject = isHtmlRule(rule)\n\t\t\t? customPropertiesFromHtmlElement\n\t\t: isRootRule(rule)\n\t\t\t? customPropertiesFromRootPseudo\n\t\t: null;\n\n\t\t// for each custom property\n\t\tif (customPropertiesObject) {\n\t\t\trule.nodes.slice().forEach(decl => {\n\t\t\t\tif (isCustomDecl(decl) && !isBlockIgnored(decl)) {\n\t\t\t\t\tconst { prop } = decl;\n\n\t\t\t\t\t// write the parsed value to the custom property\n\t\t\t\t\tcustomPropertiesObject[prop] = parse(decl.value).nodes;\n\n\t\t\t\t\t// conditionally remove the custom property declaration\n\t\t\t\t\tif (!opts.preserve) {\n\t\t\t\t\t\tdecl.remove();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// conditionally remove the empty html or :root rule\n\t\t\tif (!opts.preserve && isEmptyParent(rule) && !isBlockIgnored(rule)) {\n\t\t\t\trule.remove();\n\t\t\t}\n\t\t}\n\t});\n\n\t// return all custom properties, preferring :root properties over html properties\n\treturn { ...customPropertiesFromHtmlElement, ...customPropertiesFromRootPseudo };\n}\n\n// match html and :root rules\nconst htmlSelectorRegExp = /^html$/i;\nconst rootSelectorRegExp = /^:root$/i;\nconst customPropertyRegExp = /^--[A-z][\\w-]*$/;\n\n// whether the node is an html or :root rule\nconst isHtmlRule = node => node.type === 'rule' && node.selector.split(',').some(item => htmlSelectorRegExp.test(item)) && Object(node.nodes).length;\nconst isRootRule = node => node.type === 'rule' && node.selector.split(',').some(item => rootSelectorRegExp.test(item)) && Object(node.nodes).length;\n\n// whether the node is an custom property\nconst isCustomDecl = node => node.type === 'decl' && customPropertyRegExp.test(node.prop);\n\n// whether the node is a parent without children\nconst isEmptyParent = node => Object(node.nodes).length === 0;\n","import fs from 'fs';\nimport path from 'path';\nimport postcss from 'postcss';\nimport { parse } from 'postcss-values-parser';\nimport getCustomPropertiesFromRoot from './get-custom-properties-from-root';\n\n/* Get Custom Properties from CSS File\n/* ========================================================================== */\n\nasync function getCustomPropertiesFromCSSFile(from) {\n\tconst css = await readFile(from);\n\tconst root = postcss.parse(css, { from });\n\n\treturn getCustomPropertiesFromRoot(root, { preserve: true });\n}\n\n/* Get Custom Properties from Object\n/* ========================================================================== */\n\nfunction getCustomPropertiesFromObject(object) {\n\tconst customProperties = Object.assign(\n\t\t{},\n\t\tObject(object).customProperties,\n\t\tObject(object)['custom-properties']\n\t);\n\n\tfor (const key in customProperties) {\n\t\tcustomProperties[key] = parse(String(customProperties[key])).nodes;\n\t}\n\n\treturn customProperties;\n}\n\n/* Get Custom Properties from JSON file\n/* ========================================================================== */\n\nasync function getCustomPropertiesFromJSONFile(from) {\n\tconst object = await readJSON(from);\n\n\treturn getCustomPropertiesFromObject(object);\n}\n\n/* Get Custom Properties from JS file\n/* ========================================================================== */\n\nasync function getCustomPropertiesFromJSFile(from) {\n\tconst object = await import(from);\n\n\treturn getCustomPropertiesFromObject(object);\n}\n\n/* Get Custom Properties from Imports\n/* ========================================================================== */\n\nexport default function getCustomPropertiesFromImports(sources) {\n\treturn sources.map(source => {\n\t\tif (source instanceof Promise) {\n\t\t\treturn source;\n\t\t} else if (source instanceof Function) {\n\t\t\treturn source();\n\t\t}\n\n\t\t// read the source as an object\n\t\tconst opts = source === Object(source) ? source : { from: String(source) };\n\n\t\t// skip objects with Custom Properties\n\t\tif (opts.customProperties || opts['custom-properties']) {\n\t\t\treturn opts\n\t\t}\n\n\t\t// source pathname\n\t\tconst from = path.resolve(String(opts.from || ''));\n\n\t\t// type of file being read from\n\t\tconst type = (opts.type || path.extname(from).slice(1)).toLowerCase();\n\n\t\treturn { type, from };\n\t}).reduce(async (customProperties, source) => {\n\t\tconst { type, from } = await source;\n\n\t\tif (type === 'css' || type === 'pcss') {\n\t\t\treturn Object.assign(await customProperties, await getCustomPropertiesFromCSSFile(from));\n\t\t}\n\n\t\tif (type === 'js') {\n\t\t\treturn Object.assign(await customProperties, await getCustomPropertiesFromJSFile(from));\n\t\t}\n\n\t\tif (type === 'json') {\n\t\t\treturn Object.assign(await customProperties, await getCustomPropertiesFromJSONFile(from));\n\t\t}\n\n\t\treturn Object.assign(await customProperties, await getCustomPropertiesFromObject(await source));\n\t}, {});\n}\n\n/* Helper utilities\n/* ========================================================================== */\n\nconst readFile = from => new Promise((resolve, reject) => {\n\tfs.readFile(from, 'utf8', (error, result) => {\n\t\tif (error) {\n\t\t\treject(error);\n\t\t} else {\n\t\t\tresolve(result);\n\t\t}\n\t});\n});\n\nconst readJSON = async from => JSON.parse(await readFile(from));\n","export default function transformValueAST(root, customProperties) {\n\tif (root.nodes && root.nodes.length) {\n\t\troot.nodes.slice().forEach(child => {\n\t\t\tif (isVarFunction(child)) {\n\t\t\t\t// eslint-disable-next-line no-unused-vars\n\t\t\t\tconst [propertyNode, comma, ...fallbacks] = child.nodes;\n\t\t\t\tconst { value: name } = propertyNode;\n\n\t\t\t\tif (name in Object(customProperties)) {\n\t\t\t\t\t// conditionally replace a known custom property\n\t\t\t\t\tconst nodes = asClonedArrayWithBeforeSpacing(customProperties[name], child.raws.before);\n\n\t\t\t\t\t/**\n\t\t\t\t\t * https://github.com/postcss/postcss-custom-properties/issues/221\n\t\t\t\t\t * https://github.com/postcss/postcss-custom-properties/issues/218\n\t\t\t\t\t *\n\t\t\t\t\t * replaceWith loses node.raws values, so we need to save it and restore\n\t\t\t\t\t */\n\t\t\t\t\tconst raws = nodes.map(node => ({...node.raws}));\n\n\t\t\t\t\tchild.replaceWith(...nodes);\n\n\t\t\t\t\tnodes.forEach((node, index) => {\n\t\t\t\t\t\tnode.raws = raws[index];\n\t\t\t\t\t});\n\n\t\t\t\t\tretransformValueAST({ nodes }, customProperties, name);\n\t\t\t\t} else if (fallbacks.length) {\n\t\t\t\t\t// conditionally replace a custom property with a fallback\n\t\t\t\t\tconst index = root.nodes.indexOf(child);\n\n\t\t\t\t\tif (index !== -1) {\n\t\t\t\t\t\troot.nodes.splice(index, 1, ...asClonedArrayWithBeforeSpacing(fallbacks, child.raws.before));\n\t\t\t\t\t}\n\n\t\t\t\t\ttransformValueAST(root, customProperties);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\ttransformValueAST(child, customProperties);\n\t\t\t}\n\t\t});\n\t}\n\n\treturn root;\n}\n\n// retransform the current ast without a custom property (to prevent recursion)\nfunction retransformValueAST(root, customProperties, withoutProperty) {\n\tconst nextCustomProperties = Object.assign({}, customProperties);\n\n\tdelete nextCustomProperties[withoutProperty];\n\n\treturn transformValueAST(root, nextCustomProperties);\n}\n\n// match var() functions\nconst varRegExp = /^var$/i;\n\n// whether the node is a var() function\nconst isVarFunction = node => node.type === 'func' && varRegExp.test(node.name) && Object(node.nodes).length > 0;\n\n// return an array with its nodes cloned, preserving the raw\nconst asClonedArrayWithBeforeSpacing = (array, beforeSpacing) => {\n\tconst clonedArray = asClonedArray(array, null);\n\n\tif (clonedArray[0]) {\n\t\tclonedArray[0].raws.before = beforeSpacing;\n\t}\n\n\treturn clonedArray;\n};\n\n// return an array with its nodes cloned\nconst asClonedArray = (array, parent) => array.map(node => asClonedNode(node, parent));\n\n// return a cloned node\nconst asClonedNode = (node, parent) => {\n\tconst cloneNode = new node.constructor(node);\n\n\tfor (const key in node) {\n\t\tif (key === 'parent') {\n\t\t\tcloneNode.parent = parent;\n\t\t} else if (Object(node[key]).constructor === Array) {\n\t\t\tcloneNode[key] = asClonedArray(node.nodes, cloneNode);\n\t\t} else if (Object(node[key]).constructor === Object) {\n\t\t\tcloneNode[key] = Object.assign({}, node[key]);\n\t\t}\n\t}\n\n\treturn cloneNode;\n};\n","import { parse } from 'postcss-values-parser';\nimport transformValueAST from './transform-value-ast';\nimport { isRuleIgnored } from './is-ignored';\n\n// transform custom pseudo selectors with custom selectors\nexport default (root, customProperties, opts) => {\n\t// walk decls that can be transformed\n\troot.walkDecls(decl => {\n\t\tif (isTransformableDecl(decl) && !isRuleIgnored(decl)) {\n\t\t\tconst originalValue = decl.value;\n\t\t\tconst valueAST = parse(originalValue);\n\t\t\tconst value = String(transformValueAST(valueAST, customProperties));\n\n\t\t\t// conditionally transform values that have changed\n\t\t\tif (value !== originalValue) {\n\t\t\t\tif (opts.preserve) {\n\t\t\t\t\tconst beforeDecl = decl.cloneBefore({ value });\n\n\t\t\t\t\tif (hasTrailingComment(beforeDecl)) {\n\t\t\t\t\t\tbeforeDecl.raws.value.value = beforeDecl.value.replace(trailingCommentRegExp, '$1');\n\t\t\t\t\t\tbeforeDecl.raws.value.raw = beforeDecl.raws.value.value + beforeDecl.raws.value.raw.replace(trailingCommentRegExp, '$2');\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tdecl.value = value;\n\n\t\t\t\t\tif (hasTrailingComment(decl)) {\n\t\t\t\t\t\tdecl.raws.value.value = decl.value.replace(trailingCommentRegExp, '$1');\n\t\t\t\t\t\tdecl.raws.value.raw = decl.raws.value.value + decl.raws.value.raw.replace(trailingCommentRegExp, '$2');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n};\n\n// match custom properties\nconst customPropertyRegExp = /^--[A-z][\\w-]*$/;\n\n// match custom property inclusions\nconst customPropertiesRegExp = /(^|[^\\w-])var\\([\\W\\w]+\\)/;\n\n// whether the declaration should be potentially transformed\nconst isTransformableDecl = decl => !customPropertyRegExp.test(decl.prop) && customPropertiesRegExp.test(decl.value);\n\n// whether the declaration has a trailing comment\nconst hasTrailingComment = decl => 'value' in Object(Object(decl.raws).value) && 'raw' in decl.raws.value && trailingCommentRegExp.test(decl.raws.value.raw);\nconst trailingCommentRegExp = /^([\\W\\w]+)(\\s*\\/\\*[\\W\\w]+?\\*\\/)$/;\n","import fs from 'fs';\nimport path from 'path';\n\n/* Write Custom Properties to CSS File\n/* ========================================================================== */\n\nasync function writeCustomPropertiesToCssFile(to, customProperties) {\n\tconst cssContent = Object.keys(customProperties).reduce((cssLines, name) => {\n\t\tcssLines.push(`\\t${name}: ${customProperties[name]};`);\n\n\t\treturn cssLines;\n\t}, []).join('\\n');\n\tconst css = `:root {\\n${cssContent}\\n}\\n`;\n\n\tawait writeFile(to, css);\n}\n\n/* Write Custom Properties to SCSS File\n/* ========================================================================== */\n\nasync function writeCustomPropertiesToScssFile(to, customProperties) {\n\tconst scssContent = Object.keys(customProperties).reduce((scssLines, name) => {\n\t\tconst scssName = name.replace('--', '$');\n\t\tscssLines.push(`${scssName}: ${customProperties[name]};`);\n\n\t\treturn scssLines;\n\t}, []).join('\\n');\n\tconst scss = `${scssContent}\\n`;\n\n\tawait writeFile(to, scss);\n}\n\n/* Write Custom Properties to JSON file\n/* ========================================================================== */\n\nasync function writeCustomPropertiesToJsonFile(to, customProperties) {\n\tconst jsonContent = JSON.stringify({\n\t\t'custom-properties': customProperties\n\t}, null, '  ');\n\tconst json = `${jsonContent}\\n`;\n\n\tawait writeFile(to, json);\n}\n\n/* Write Custom Properties to Common JS file\n/* ========================================================================== */\n\nasync function writeCustomPropertiesToCjsFile(to, customProperties) {\n\tconst jsContents = Object.keys(customProperties).reduce((jsLines, name) => {\n\t\tjsLines.push(`\\t\\t'${escapeForJS(name)}': '${escapeForJS(customProperties[name])}'`);\n\n\t\treturn jsLines;\n\t}, []).join(',\\n');\n\tconst js = `module.exports = {\\n\\tcustomProperties: {\\n${jsContents}\\n\\t}\\n};\\n`;\n\n\tawait writeFile(to, js);\n}\n\n/* Write Custom Properties to Module JS file\n/* ========================================================================== */\n\nasync function writeCustomPropertiesToMjsFile(to, customProperties) {\n\tconst mjsContents = Object.keys(customProperties).reduce((mjsLines, name) => {\n\t\tmjsLines.push(`\\t'${escapeForJS(name)}': '${escapeForJS(customProperties[name])}'`);\n\n\t\treturn mjsLines;\n\t}, []).join(',\\n');\n\tconst mjs = `export const customProperties = {\\n${mjsContents}\\n};\\n`;\n\n\tawait writeFile(to, mjs);\n}\n\n/* Write Custom Properties to Exports\n/* ========================================================================== */\n\nexport default function writeCustomPropertiesToExports(customProperties, destinations) {\n\treturn Promise.all(destinations.map(async destination => {\n\t\tif (destination instanceof Function) {\n\t\t\tawait destination(defaultCustomPropertiesToJSON(customProperties));\n\t\t} else {\n\t\t\t// read the destination as an object\n\t\t\tconst opts = destination === Object(destination) ? destination : { to: String(destination) };\n\n\t\t\t// transformer for Custom Properties into a JSON-compatible object\n\t\t\tconst toJSON = opts.toJSON || defaultCustomPropertiesToJSON;\n\n\t\t\tif ('customProperties' in opts) {\n\t\t\t\t// write directly to an object as customProperties\n\t\t\t\topts.customProperties = toJSON(customProperties);\n\t\t\t} else if ('custom-properties' in opts) {\n\t\t\t\t// write directly to an object as custom-properties\n\t\t\t\topts['custom-properties'] = toJSON(customProperties);\n\t\t\t} else {\n\t\t\t\t// destination pathname\n\t\t\t\tconst to = String(opts.to || '');\n\n\t\t\t\t// type of file being written to\n\t\t\t\tconst type = (opts.type || path.extname(opts.to).slice(1)).toLowerCase();\n\n\t\t\t\t// transformed Custom Properties\n\t\t\t\tconst customPropertiesJSON = toJSON(customProperties);\n\n\t\t\t\tif (type === 'css') {\n\t\t\t\t\tawait writeCustomPropertiesToCssFile(to, customPropertiesJSON);\n\t\t\t\t}\n\n\t\t\t\tif (type === 'scss') {\n\t\t\t\t\tawait writeCustomPropertiesToScssFile(to, customPropertiesJSON);\n\t\t\t\t}\n\n\t\t\t\tif (type === 'js') {\n\t\t\t\t\tawait writeCustomPropertiesToCjsFile(to, customPropertiesJSON);\n\t\t\t\t}\n\n\t\t\t\tif (type === 'json') {\n\t\t\t\t\tawait writeCustomPropertiesToJsonFile(to, customPropertiesJSON);\n\t\t\t\t}\n\n\t\t\t\tif (type === 'mjs') {\n\t\t\t\t\tawait writeCustomPropertiesToMjsFile(to, customPropertiesJSON);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}));\n}\n\n/* Helper utilities\n/* ========================================================================== */\n\nconst defaultCustomPropertiesToJSON = customProperties => {\n\treturn Object.keys(customProperties).reduce((customPropertiesJSON, key) => {\n\t\tconst valueNodes = customProperties[key];\n\t\tcustomPropertiesJSON[key] = valueNodes.map((propertyObject) => {\n\t\t\treturn propertyObject.toString();\n\t\t}).join(' ');\n\n\t\treturn customPropertiesJSON;\n\t}, {});\n};\n\nconst writeFile = (to, text) => new Promise((resolve, reject) => {\n\tfs.writeFile(to, text, error => {\n\t\tif (error) {\n\t\t\treject(error);\n\t\t} else {\n\t\t\tresolve();\n\t\t}\n\t});\n});\n\nconst escapeForJS = string => string.replace(/\\\\([\\s\\S])|(')/g, '\\\\$1$2').replace(/\\n/g, '\\\\n').replace(/\\r/g, '\\\\r');\n","import postcss from 'postcss';\nimport getCustomPropertiesFromRoot from './lib/get-custom-properties-from-root';\nimport getCustomPropertiesFromImports from './lib/get-custom-properties-from-imports';\nimport transformProperties from './lib/transform-properties';\nimport writeCustomPropertiesToExports from './lib/write-custom-properties-to-exports';\n\nexport default postcss.plugin('postcss-custom-properties', opts => {\n\t// whether to preserve custom selectors and rules using them\n\tconst preserve = 'preserve' in Object(opts) ? Boolean(opts.preserve) : true;\n\n\t// sources to import custom selectors from\n\tconst importFrom = [].concat(Object(opts).importFrom || []);\n\n\t// destinations to export custom selectors to\n\tconst exportTo = [].concat(Object(opts).exportTo || []);\n\n\t// promise any custom selectors are imported\n\tconst customPropertiesPromise = getCustomPropertiesFromImports(importFrom);\n\n\t// synchronous transform\n\tconst syncTransform = root => {\n\t\tconst customProperties = getCustomPropertiesFromRoot(root, { preserve });\n\n\t\ttransformProperties(root, customProperties, { preserve });\n\t};\n\n\t// asynchronous transform\n\tconst asyncTransform = async root => {\n\t\tconst customProperties = Object.assign(\n\t\t\t{},\n\t\t\tgetCustomPropertiesFromRoot(root, { preserve }),\n\t\t\tawait customPropertiesPromise,\n\t\t);\n\n\t\tawait writeCustomPropertiesToExports(customProperties, exportTo);\n\n\t\ttransformProperties(root, customProperties, { preserve });\n\t};\n\n\t// whether to return synchronous function if no asynchronous operations are requested\n\tconst canReturnSyncFunction = importFrom.length === 0 && exportTo.length === 0;\n\n\treturn canReturnSyncFunction ? syncTransform : asyncTransform;\n});\n"],"names":["isBlockIgnored","ruleOrDeclaration","rule","selector","parent","test","toString","isRuleIgnored","previous","prev","Boolean","type","text","getCustomPropertiesFromRoot","root","opts","customPropertiesFromHtmlElement","customPropertiesFromRootPseudo","nodes","slice","forEach","customPropertiesObject","isHtmlRule","isRootRule","decl","isCustomDecl","prop","parse","value","preserve","remove","isEmptyParent","htmlSelectorRegExp","rootSelectorRegExp","customPropertyRegExp","node","split","some","item","Object","length","getCustomPropertiesFromCSSFile","from","css","readFile","postcss","getCustomPropertiesFromObject","object","customProperties","assign","key","String","getCustomPropertiesFromJSONFile","readJSON","getCustomPropertiesFromJSFile","getCustomPropertiesFromImports","sources","map","source","Promise","Function","path","resolve","extname","toLowerCase","reduce","reject","fs","error","result","JSON","transformValueAST","child","isVarFunction","propertyNode","comma","fallbacks","name","asClonedArrayWithBeforeSpacing","raws","before","replaceWith","index","retransformValueAST","indexOf","splice","withoutProperty","nextCustomProperties","varRegExp","array","beforeSpacing","clonedArray","asClonedArray","asClonedNode","cloneNode","constructor","Array","walkDecls","isTransformableDecl","originalValue","valueAST","beforeDecl","cloneBefore","hasTrailingComment","replace","trailingCommentRegExp","raw","customPropertiesRegExp","writeCustomPropertiesToCssFile","to","cssContent","keys","cssLines","push","join","writeFile","writeCustomPropertiesToScssFile","scssContent","scssLines","scssName","scss","writeCustomPropertiesToJsonFile","jsonContent","stringify","json","writeCustomPropertiesToCjsFile","jsContents","jsLines","escapeForJS","js","writeCustomPropertiesToMjsFile","mjsContents","mjsLines","mjs","writeCustomPropertiesToExports","destinations","all","destination","defaultCustomPropertiesToJSON","toJSON","customPropertiesJSON","valueNodes","propertyObject","string","plugin","importFrom","concat","exportTo","customPropertiesPromise","syncTransform","transformProperties","asyncTransform","canReturnSyncFunction"],"mappings":"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"}